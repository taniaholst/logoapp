"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var classNames = require("classnames");
var PT = require("prop-types");
var nav_frontend_js_utils_1 = require("nav-frontend-js-utils");
var skjemaelement_feilmelding_1 = require("./skjemaelement-feilmelding");
var _1 = require("./");
require("nav-frontend-skjema-style");

var BekreftCheckboksPanel = function (_React$Component) {
    _inherits(BekreftCheckboksPanel, _React$Component);

    function BekreftCheckboksPanel() {
        _classCallCheck(this, BekreftCheckboksPanel);

        return _possibleConstructorReturn(this, (BekreftCheckboksPanel.__proto__ || Object.getPrototypeOf(BekreftCheckboksPanel)).apply(this, arguments));
    }

    _createClass(BekreftCheckboksPanel, [{
        key: "render",
        value: function render() {
            var _props = this.props,
                checked = _props.checked,
                onChange = _props.onChange,
                label = _props.label,
                inputProps = _props.inputProps,
                className = _props.className,
                feil = _props.feil;

            var feilmeldingId = nav_frontend_js_utils_1.guid();
            var cls = classNames('bekreftCheckboksPanel', className, {
                'bekreftCheckboksPanel--checked': checked,
                'bekreftCheckboksPanel--error': feil
            });
            return React.createElement("div", { className: cls }, this.props.children && React.createElement("div", { className: "bekreftCheckboksPanel__innhold" }, this.props.children), React.createElement(_1.Checkbox, Object.assign({ "aria-invalid": !!feil, "aria-errormessage": feil ? feilmeldingId : undefined }, inputProps, { label: label, checked: checked, "aria-checked": checked, onChange: onChange })), React.createElement(skjemaelement_feilmelding_1.default, { id: feilmeldingId }, typeof feil !== 'boolean' && feil));
        }
    }]);

    return BekreftCheckboksPanel;
}(React.Component);

exports.BekreftCheckboksPanel = BekreftCheckboksPanel;
BekreftCheckboksPanel.propTypes = {
    children: PT.node,
    className: PT.string,
    checked: PT.bool.isRequired,
    label: PT.string.isRequired,
    onChange: PT.func.isRequired,
    feil: PT.oneOfType([PT.node, PT.bool])
};
exports.default = BekreftCheckboksPanel;
BekreftCheckboksPanel.__docgenInfo = {"description":"","displayName":"BekreftCheckboksPanel","methods":[],"props":{"onChange":{"defaultValue":null,"description":"Callback-funksjon som blir kalt når checkboksen endrer state","name":"onChange","parent":{"fileName":"nav-frontend-moduler/packages/node_modules/nav-frontend-skjema/src/bekreft-checkboks-panel.tsx","name":"BekreftCheckboksPanelProps"},"required":true,"type":{"name":"(event: SyntheticEvent<EventTarget, Event>) => void"}},"checked":{"defaultValue":null,"description":"Default checked state for checkboksen","name":"checked","parent":{"fileName":"nav-frontend-moduler/packages/node_modules/nav-frontend-skjema/src/bekreft-checkboks-panel.tsx","name":"BekreftCheckboksPanelProps"},"required":true,"type":{"name":"boolean"}},"label":{"defaultValue":null,"description":"Tekst til høyre for checkboksen","name":"label","parent":{"fileName":"nav-frontend-moduler/packages/node_modules/nav-frontend-skjema/src/bekreft-checkboks-panel.tsx","name":"BekreftCheckboksPanelProps"},"required":true,"type":{"name":"string"}},"children":{"defaultValue":null,"description":"Tekst over checkboksen","name":"children","parent":{"fileName":"nav-frontend-moduler/packages/node_modules/nav-frontend-skjema/src/bekreft-checkboks-panel.tsx","name":"BekreftCheckboksPanelProps"},"required":false,"type":{"name":"string | number | boolean | {} | ReactElement<any, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)>) | (new (props: any) => Component<...>)> | ... 47 more ... | (ReactChildren & ReactPortal)"}},"inputProps":{"defaultValue":null,"description":"Øvrige custom props til <input>-elementet som ligger i bunn","name":"inputProps","parent":{"fileName":"nav-frontend-moduler/packages/node_modules/nav-frontend-skjema/src/bekreft-checkboks-panel.tsx","name":"BekreftCheckboksPanelProps"},"required":false,"type":{"name":"InputHTMLAttributes<HTMLInputElement>"}},"className":{"defaultValue":null,"description":"Klassenavn","name":"className","parent":{"fileName":"nav-frontend-moduler/packages/node_modules/nav-frontend-skjema/src/bekreft-checkboks-panel.tsx","name":"BekreftCheckboksPanelProps"},"required":false,"type":{"name":"string"}},"feil":{"defaultValue":null,"description":"Feilmelding","name":"feil","parent":{"fileName":"nav-frontend-moduler/packages/node_modules/nav-frontend-skjema/src/bekreft-checkboks-panel.tsx","name":"BekreftCheckboksPanelProps"},"required":false,"type":{"name":"ReactNode"}}}}