{"ast":null,"code":"var _jsxFileName = \"/Users/taniaholst/Documents/nav/logoapp/src/technologies/images.tsx\";\nimport { Component } from \"react\";\nimport React from \"react\";\nimport ListOfImages from \"./listofimages\";\nimport docker from './images/docker.png';\nimport go from './images/go.png';\nimport java from './images/java.png';\nimport jupyter from './images/jupyter.png';\nimport kafka from './images/kafka.png';\nimport kotlin from './images/kotlin.png';\nimport kubeflow from './images/kubeflow.png';\nimport nodejs from \"./images/nodejs.svg\";\nimport python from './images/python.png';\nimport r from './images/r.png';\nimport react from './images/react.png';\nimport rust from './images/rust.png';\nimport vue from './images/vue.png';\nimport elm from \"./images/elm.svg\";\n\nclass ImageClass extends Component {\n  render() {\n    const images = [{\n      photo: docker,\n      text: \"docker\"\n    }, {\n      photo: go,\n      text: \"go\"\n    }, {\n      photo: java,\n      text: \"java\"\n    }, {\n      photo: jupyter,\n      text: \"jupyter\"\n    }, {\n      photo: kafka,\n      text: \"kafka\"\n    }, {\n      photo: kotlin,\n      text: \"kotlin\"\n    }, {\n      photo: kubeflow,\n      text: \"kubeflow\"\n    }, {\n      photo: nodejs,\n      text: \"node\"\n    }, {\n      photo: python,\n      text: \"python\"\n    }, {\n      photo: r,\n      text: \"r\"\n    }, {\n      photo: react,\n      text: \"react\"\n    }, {\n      photo: rust,\n      text: \"rust\"\n    }, {\n      photo: vue,\n      text: \"vue\"\n    }, {\n      photo: elm,\n      text: \"elm\"\n    }];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, images.map((e, id) => React.createElement(ListOfImages, {\n      photo: e.photo,\n      text: e.text,\n      key: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default ImageClass;","map":{"version":3,"sources":["/Users/taniaholst/Documents/nav/logoapp/src/technologies/images.tsx"],"names":["Component","React","ListOfImages","docker","go","java","jupyter","kafka","kotlin","kubeflow","python","r","react","rust","vue","ImageClass","render","images","photo","text","nodejs","elm","map","e","id"],"mappings":";AAAA,SAAQA,SAAR,QAAwB,OAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,EAAP,MAAe,iBAAf;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,CAAP,MAAc,gBAAd;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;;;AAGA,MAAMC,UAAN,SAAyBf,SAAzB,CAAmC;AAC/BgB,EAAAA,MAAM,GAAG;AACL,UAAMC,MAAM,GAAG,CAAC;AACZC,MAAAA,KAAK,EAAEf,MADK;AAEZgB,MAAAA,IAAI,EAAE;AAFM,KAAD,EAGZ;AACCD,MAAAA,KAAK,EAAEd,EADR;AAECe,MAAAA,IAAI,EAAE;AAFP,KAHY,EAMZ;AACCD,MAAAA,KAAK,EAAEb,IADR;AAECc,MAAAA,IAAI,EAAE;AAFP,KANY,EASZ;AACCD,MAAAA,KAAK,EAAEZ,OADR;AAECa,MAAAA,IAAI,EAAE;AAFP,KATY,EAYZ;AACCD,MAAAA,KAAK,EAAEX,KADR;AAECY,MAAAA,IAAI,EAAE;AAFP,KAZY,EAeZ;AACCD,MAAAA,KAAK,EAAEV,MADR;AAECW,MAAAA,IAAI,EAAE;AAFP,KAfY,EAkBZ;AACCD,MAAAA,KAAK,EAAET,QADR;AAECU,MAAAA,IAAI,EAAE;AAFP,KAlBY,EAqBZ;AACCD,MAAAA,KAAK,EAAEE,MADR;AAECD,MAAAA,IAAI,EAAE;AAFP,KArBY,EAwBZ;AACCD,MAAAA,KAAK,EAAER,MADR;AAECS,MAAAA,IAAI,EAAE;AAFP,KAxBY,EA2BZ;AACCD,MAAAA,KAAK,EAAEP,CADR;AAECQ,MAAAA,IAAI,EAAE;AAFP,KA3BY,EA8BZ;AACCD,MAAAA,KAAK,EAAEN,KADR;AAECO,MAAAA,IAAI,EAAE;AAFP,KA9BY,EAiCZ;AACCD,MAAAA,KAAK,EAAEL,IADR;AAECM,MAAAA,IAAI,EAAE;AAFP,KAjCY,EAoCZ;AACCD,MAAAA,KAAK,EAAEJ,GADR;AAECK,MAAAA,IAAI,EAAE;AAFP,KApCY,EAuCZ;AACCD,MAAAA,KAAK,EAAEG,GADR;AAECF,MAAAA,IAAI,EAAE;AAFP,KAvCY,CAAf;AA6CA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKF,MAAM,CAACK,GAAP,CAAW,CAACC,CAAD,EAAIC,EAAJ,KACR,oBAAC,YAAD;AACI,MAAA,KAAK,EAAED,CAAC,CAACL,KADb;AAEI,MAAA,IAAI,EAAEK,CAAC,CAACJ,IAFZ;AAGI,MAAA,GAAG,EAAEK,EAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CADL,CADJ;AAWH;;AA1D8B;;AA6DnC,eAAeT,UAAf","sourcesContent":["import {Component} from \"react\";\nimport React from \"react\";\nimport ListOfImages from \"./listofimages\";\nimport docker from './images/docker.png'\nimport go from './images/go.png'\nimport java from './images/java.png'\nimport jupyter from './images/jupyter.png'\nimport kafka from './images/kafka.png'\nimport kotlin from './images/kotlin.png'\nimport kubeflow from './images/kubeflow.png'\nimport nodejs from './images/nodejs.svg'\nimport python from './images/python.png'\nimport r from './images/r.png'\nimport react from './images/react.png'\nimport rust from './images/rust.png'\nimport vue from './images/vue.png'\nimport elm from './images/elm.svg'\n\nclass ImageClass extends Component {\n    render() {\n        const images = [{\n            photo: docker,\n            text: \"docker\"\n        }, {\n            photo: go,\n            text: \"go\"\n        }, {\n            photo: java,\n            text: \"java\"\n        }, {\n            photo: jupyter,\n            text: \"jupyter\"\n        }, {\n            photo: kafka,\n            text: \"kafka\"\n        }, {\n            photo: kotlin,\n            text: \"kotlin\"\n        }, {\n            photo: kubeflow,\n            text: \"kubeflow\"\n        }, {\n            photo: nodejs,\n            text: \"node\"\n        }, {\n            photo: python,\n            text: \"python\"\n        }, {\n            photo: r,\n            text: \"r\"\n        }, {\n            photo: react,\n            text: \"react\"\n        }, {\n            photo: rust,\n            text: \"rust\"\n        }, {\n            photo: vue,\n            text: \"vue\"\n        }, {\n            photo: elm,\n            text: \"elm\"\n        }];\n\n\n        return (\n            <div>\n                {images.map((e, id) =>\n                    <ListOfImages\n                        photo={e.photo}\n                        text={e.text}\n                        key={id}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nexport default ImageClass;\n"]},"metadata":{},"sourceType":"module"}